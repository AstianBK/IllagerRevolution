    buildscript {
        repositories {

            maven { url = 'https://maven.minecraftforge.net' }
            maven { url = 'https://maven.parchmentmc.org' }
            maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
            mavenCentral()
        }
        dependencies {
            classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
            classpath 'org.parchmentmc:librarian:1.+'
            classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"

        }
    }

    apply plugin: 'net.minecraftforge.gradle'
    apply plugin: 'org.parchmentmc.librarian.forgegradle'
    apply plugin: 'org.spongepowered.mixin'
    apply plugin: 'maven-publish'
    apply plugin: 'eclipse'

    mixin{
        add sourceSets.main, 'illagerrevolution.refmap.json'
    }

    version = '1.0 - 1.18.2'
    group = 'net.sangrebk.illagerrevolution'
    archivesBaseName = 'illagerrevolution'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)



    println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
    minecraft {

        mappings channel: 'parchment', version: '1.18.1-2022.03.06-1.18.2'

        runs {
            client {
                workingDirectory project.file('run')

                property 'forge.logging.markers', 'REGISTRIES'

                property 'forge.logging.console.level', 'debug'

                property 'forge.enabledGameTestNamespaces', 'illagerrevolution'

                property "mixin.env.remapRefMap", "true"

                arg "-mixin.config=illagerrevolution.mixins.json"

                mods {
                    illagerrevolution {
                        source sourceSets.main
                    }
                }
            }

            server {
                workingDirectory project.file('run')

                property 'forge.logging.markers', 'REGISTRIES'

                property 'forge.logging.console.level', 'debug'

                property 'forge.enabledGameTestNamespaces', 'illagerrevolution'

                property "mixin.env.remapRefMap", "true"

                arg "-mixin.config=illagerrevolution.mixins.json"

                mods {
                    illagerrevolution {
                        source sourceSets.main
                    }
                }
            }

            data {
                workingDirectory project.file('run')

                property 'forge.logging.markers', 'REGISTRIES'

                property 'forge.logging.console.level', 'debug'

                args '--mod', 'illagerrevolution', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

                mods {
                    illagerrevolution {
                        source sourceSets.main
                    }
                }
            }
        }
    }

    sourceSets.main.resources { srcDir 'src/generated/resources' }

    repositories {
        maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    }

    dependencies {

        minecraft 'net.minecraftforge:forge:1.18.2-40.1.0'
        annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
        implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.18:3.0.57')
    }

    jar {
        manifest {
            attributes([
                    "Specification-Title"     : "illagerrevolution",
                    "Specification-Vendor"    : "illagerrevolution",
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : "illagerrevolution",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "MixinConfigs"            : "illagerrevolution.mixins.json"
            ])
        }
    }

    jar.finalizedBy('reobfJar')

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact jar
            }
        }
        repositories {
            maven {
                url "file://${project.projectDir}/mcmodsrepo"
            }
        }
    }


    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
